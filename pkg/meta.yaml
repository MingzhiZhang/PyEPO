# conda build . -c conda-forge -c default -c pytorch -c gurobi
# anaconda upload -u pyepo $USER/anaconda3/conda-bld/win-64pyepo-0.4.3-py312_0.tar.bz2

package:
  name: pyepo
  version: 0.4.3

source:
  path: ./

build:
  noarch: python
  number: 0
  script: python -m pip install --no-deps --ignore-installed .

channels:
  - conda-forge
  - defaults
  - pytorch
  - gurobi

requirements:
  host:
    - python >=3.7
    - pip
    - numpy
    - tqdm
  run:
    - python >=3.7
    - numpy
    - scipy
    - pathos
    - tqdm
    - scikit-learn
    - pytorch >=1.13

extra:
  optional-dependencies:
    - gurobi >=9.1.2
    - pyomo >=6.1.2

about:
  home: https://github.com/khalil-research/PyEPO
  license: MIT
  summary: "PyTorch-based End-to-End Predict-then-Optimize Tool"
  description: |
    ``PyEPO`` (PyTorch-based End-to-End Predict-then-Optimize Tool) is a Python-based,
    open-source software that supports modeling and solving predict-then-optimize problems
    with the linear objective function. The core capability of ``PyEPO`` is to build optimization
    models with [GurobiPy](https://www.gurobi.com/), [Pyomo](http://www.pyomo.org/), or any other
    solvers and algorithms, then embed the optimization model into an artificial neural network
    for the end-to-end training. For this purpose, ``PyEPO`` implements various methods as
    [PyTorch](https://pytorch.org/) autograd modules.
